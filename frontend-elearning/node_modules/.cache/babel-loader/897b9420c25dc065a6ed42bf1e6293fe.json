{"ast":null,"code":"var _jsxFileName = \"D:\\\\PG_CDAC\\\\PG_DAC\\\\SkillSphere-E-learning-Hub\\\\frontend-elearning\\\\src\\\\components\\\\instructor\\\\Aproove.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Button, Card, CardBody, CardHeader, Col, Container, Form, FormGroup, Input, Label, Row } from \"reactstrap\"; // Function component for the 'Aproove' form\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Aproove() {\n  _s();\n\n  // State variables to store form data\n  const [qualify, setQualify] = useState(\"\");\n  const [exp, setExp] = useState(\"\");\n  const [cert, setCert] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [status, setStatus] = useState(\"no\");\n  const [uid, setUid] = useState(); // Accessing the user login state from Redux store\n\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin; // useEffect hook to get the user ID by name after component mounts\n\n  useEffect(() => {\n    const getIdByName = async () => {\n      try {\n        const config = {\n          headers: {\n            \"Content-type\": \"application/json\"\n          }\n        }; // Making a POST request to get the user ID based on user name\n\n        const {\n          data\n        } = await axios.post(\"http://localhost:9090/api/elearning/getuid\", {\n          userName: userInfo\n        }, config); // Setting the user ID state\n\n        setUid(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getIdByName();\n  }, [userInfo]); // Dependency array includes userInfo to re-run the effect if userInfo changes\n  // Form submit handler\n\n  const submitHandler = e => {\n    e.preventDefault(); // Preventing the default form submission behavior\n\n    const submi = async () => {\n      try {\n        const config = {\n          headers: {\n            \"Content-type\": \"application/json\"\n          }\n        }; // Making a POST request to submit the approval form data\n\n        const {\n          data\n        } = await axios.post(\"http://localhost:9090/api/elearning/instructor/getapprove\", {\n          qualification: qualify,\n          exp: exp,\n          certi: cert,\n          desc: desc,\n          status: status,\n          uiId: uid\n        }, config); // Alerting the user with the response data\n\n        alert(data); // Resetting the form fields\n\n        setCert(\"\");\n        setExp(\"\");\n        setQualify(\"\");\n        setDesc(\"\");\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    submi();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"my-5\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"pt-5\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        sm: {\n          size: 6,\n          offset: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          color: \"dark\",\n          outline: true,\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            className: \"text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Get Approve\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: submitHandler,\n              children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  for: \"userName\",\n                  children: \"Full Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  id: \"userName\",\n                  placeholder: \"Enter qualification\",\n                  type: \"text\",\n                  value: qualify,\n                  onChange: e => setQualify(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  for: \"experience\",\n                  children: \"Experience\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  id: \"experience\",\n                  placeholder: \"Enter your experience\",\n                  type: \"text\",\n                  value: exp,\n                  onChange: e => setExp(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  for: \"certifications\",\n                  children: \"Certifications\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  id: \"certifications\",\n                  placeholder: \"Enter your certifications\",\n                  type: \"text\",\n                  value: cert,\n                  onChange: e => setCert(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  for: \"description\",\n                  children: \"Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  id: \"description\",\n                  type: \"textarea\",\n                  value: desc,\n                  onChange: e => setDesc(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Container, {\n                className: \"text-center\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  color: \"success\",\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Aproove, \"783aV+atO+KiienPK6P+xXRF0Xg=\", false, function () {\n  return [useSelector];\n});\n\n_c = Aproove;\nexport default Aproove;\n\nvar _c;\n\n$RefreshReg$(_c, \"Aproove\");","map":{"version":3,"names":["axios","React","useEffect","useState","useSelector","Button","Card","CardBody","CardHeader","Col","Container","Form","FormGroup","Input","Label","Row","Aproove","qualify","setQualify","exp","setExp","cert","setCert","desc","setDesc","status","setStatus","uid","setUid","userLogin","state","userInfo","getIdByName","config","headers","data","post","userName","error","console","log","submitHandler","e","preventDefault","submi","qualification","certi","uiId","alert","size","offset","target","value"],"sources":["D:/PG_CDAC/PG_DAC/SkillSphere-E-learning-Hub/frontend-elearning/src/components/instructor/Aproove.jsx"],"sourcesContent":["import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Container,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Row,\n} from \"reactstrap\";\n\n// Function component for the 'Aproove' form\nfunction Aproove() {\n  // State variables to store form data\n  const [qualify, setQualify] = useState(\"\");\n  const [exp, setExp] = useState(\"\");\n  const [cert, setCert] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [status, setStatus] = useState(\"no\");\n  const [uid, setUid] = useState();\n\n  // Accessing the user login state from Redux store\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  // useEffect hook to get the user ID by name after component mounts\n  useEffect(() => {\n    const getIdByName = async () => {\n      try {\n        const config = {\n          headers: {\n            \"Content-type\": \"application/json\",\n          },\n        };\n        // Making a POST request to get the user ID based on user name\n        const { data } = await axios.post(\n          \"http://localhost:9090/api/elearning/getuid\",\n          { userName: userInfo },\n          config\n        );\n\n        // Setting the user ID state\n        setUid(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getIdByName();\n  }, [userInfo]); // Dependency array includes userInfo to re-run the effect if userInfo changes\n\n  // Form submit handler\n  const submitHandler = (e) => {\n    e.preventDefault(); // Preventing the default form submission behavior\n\n    const submi = async () => {\n      try {\n        const config = {\n          headers: {\n            \"Content-type\": \"application/json\",\n          },\n        };\n        // Making a POST request to submit the approval form data\n        const { data } = await axios.post(\n          \"http://localhost:9090/api/elearning/instructor/getapprove\",\n          {\n            qualification: qualify,\n            exp: exp,\n            certi: cert,\n            desc: desc,\n            status: status,\n            uiId: uid,\n          },\n          config\n        );\n\n        // Alerting the user with the response data\n        alert(data);\n\n        // Resetting the form fields\n        setCert(\"\");\n        setExp(\"\");\n        setQualify(\"\");\n        setDesc(\"\");\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    submi();\n  };\n\n  return (\n    <Container className=\"my-5\">\n      <Row className=\"pt-5\">\n        <Col sm={{ size: 6, offset: 3 }}>\n          <Card color=\"dark\" outline>\n            <CardHeader className=\"text-center\">\n              <h3>Get Approve</h3>\n            </CardHeader>\n            <CardBody>\n              <Form onSubmit={submitHandler}>\n                <FormGroup>\n                  <Label for=\"userName\">Full Name</Label>\n                  <Input\n                    id=\"userName\"\n                    placeholder=\"Enter qualification\"\n                    type=\"text\"\n                    value={qualify}\n                    onChange={(e) => setQualify(e.target.value)}\n                    required\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"experience\">Experience</Label>\n                  <Input\n                    id=\"experience\"\n                    placeholder=\"Enter your experience\"\n                    type=\"text\"\n                    value={exp}\n                    onChange={(e) => setExp(e.target.value)}\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"certifications\">Certifications</Label>\n                  <Input\n                    id=\"certifications\"\n                    placeholder=\"Enter your certifications\"\n                    type=\"text\"\n                    value={cert}\n                    onChange={(e) => setCert(e.target.value)}\n                    required\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"description\">Description</Label>\n                  <Input\n                    id=\"description\"\n                    type=\"textarea\"\n                    value={desc}\n                    onChange={(e) => setDesc(e.target.value)}\n                  />\n                </FormGroup>\n                <Container className=\"text-center\">\n                  <Button type=\"submit\" color=\"success\">\n                    Submit\n                  </Button>\n                </Container>\n              </Form>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Aproove;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}